try:
    print('before')
    print(7/0)
    print('after')
except ZeroDivisionError:
    print("didnt execute cause of a problem")

finally:
    print("end of the program")

"""
exception چیست؟
یک exception یک رویداد است که در حین اجرای برنامه‌ای رخ می‌دهد که جریان طبیعی دستورالعمل‌های برنامه را مختل می‌کند. به طور کلی، وقتی یک اسکریپت پایتون با موقعیتی روبرو می‌شود که توانایی کنار آمدن با آن را ندارد، یک استثنا را ایجاد می‌کند. یک استثنا یک شی پایتون است که نشان‌دهنده یک خطا است.

 

هنگامی‌که یک اسکریپت پایتون یک استثنا را مطرح می‌کند، باید بلافاصله استثنا را کنترل کند در غیر این صورت برنامه خاتمه می‌یابد و خارج می‌شود.

 

رسیدگی به یک استثنا
اگر کد مشکوکی دارید که ممکن است یک استثنا ایجاد کند، می‌توانید با قراردادن کد مشکوک در یک بلاک try ، از برنامه خود دفاع کنید. بعد از بلوک try: یک عبارت به except: اضافه کنید. همچنین می‌توانید با درج نام و نوع خطای احتمالی قابلیت‌های کنترل خطا را افزایش دهید.

بطورکلی try exception ها از سرعت برنامه کم میکنن اینو در نظر بگیر

"""

try:
    #run this code
except:
    #run this code if an exceptions occurs

"""
استثناهای رایج
پایتون تعداد استثناهای پیش فرضی را ارائه می‌دهد که در اینجا ما استثناهای استاندارد رایج را توصیف می‌کنیم. لیستی از استثناهای رایج که می‌توان به آنها اشاره کرد در زیر نمایش داده شده‌اند:

 

ZeroDivisionError: هنگامی اتفاق می‌افتد که یک عدد بر صفر تقسیم شود.
NameError: وقتی نامی پیدا نمی‌شود رخ می‌دهد. ممکن است محلی یا global  باشد.
IndentationError: اگر تورفتگی نادرست داده شود.
IOError: هنگامی رخ می‌دهد که عملکرد Input Output از کار بیفتد.
خطای EOFE: وقتی به انتهای پرونده می‌رسد و درحال انجام است، رخ می‌دهد.
 

نکته ویژه: یکی از عملکردهای دیگری که در مواجه با خطا ممکن است به شما کمک کند عملکرد else می‌باشد که در شرایطی ایجاد می‌شود که هیچ خطایی رخ نداده باشد و کاملاً مطمئن از عملکرد به آن نگاه شود. شکل زیر نحوه استفاده از آن را به شما نمایش می‌دهد.

"""

try:
    #run this code
except:
    #run this code if an exception occurs
else:
    #run this code if no exceptions occurs

"""
نکته: در ساختار exception حالتی وجود دارد که می‌توان بدون درنظرگرفتن exception اقدام به عملیاتی کرد که در عملکرد finally گنجانده می شود که در شکل زیر نمایش داده شده است.

 
"""

try:
    #run this code
except:
    #run this code if an exception occurs
else:
    #run this code if no exceptions occurs
finally:
    #always run this code


