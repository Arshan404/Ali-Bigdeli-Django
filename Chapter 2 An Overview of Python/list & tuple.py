L1 = ["Ali", "Bigdeli",27,['hello',1,2,3]]    
L2 = [1, 2, 3, 4, 5, 6]   
print(type(L1))
print(L1[0])
L1[0] = 'shoji'
print(L1[0])
print(L1[-1])
print(L1[-1][0])
L1.append('shoji')           #اضافه کردن به انتهای لیست
print(L1)
L1.insert(1 , 'sozaneh')     #اضافه کردن با نشان دادن ایندکس  و بقیه آیتم ها هم شیفت میخورن میرن جلو
print(L1)
print(len(L1))
print('hello' in L1)
print(any('hello' in item for item in L1 if isinstance(item, list))) 
print(L1[0:3])                #اسلایس کردن لیست

tuple_t = tuple(L1)           #امکان تغییر دادن در تاپل نیست
print(tuple_t)
print(type((27)))
print(type((27,)))            #اگه بخوایی به یک شاخص تاپل بهش نگاه کنی بعد اینکه تو یک پرانتز دیگه هم گذاشتیش باید جلوش یک کاما بذاری حتی اگه تک عنصری هست تا تاپل بهش نگاه کنه

"""
ویژگی‌های یک لیست
لیست دارای مشخصات زیر است:

قابلیت مرتب‌سازی
عنصر لیست می‌تواند بر اساس ایندکس بازیابی شود
لیست‌ها از نوع قابل تغییر هستند.
یک لیست می‌تواند تعداد عناصر مختلفی را در خود جای دهد از جمله یک لیست دیگر
می‌توان یک لیست را از اندیس‌های منفی نیز پیمایش کرد

"""

"""
List slice یا تکه سازی لیست
عملکرد slice مانند قطعه قطعه کردن لیست به موارد مورد نیاز توسعه‌دهنده است که از این روش برای گرفتن بخشی و یا یک ساختار خاصی از یک لیست کامل استفاده می‌شود. از جمله نکاتی که می‌توان در تکه سازی لیست به آن اشاره کرد الگوی کار با لیست است که در زیر به آن اشاره شده است.

 

list_varible[start:stop:step] 
 

در طرح بالا list_varibale جایگاه نام لیست مربوطه و به ترتیب:

 Start: جایگاه شروع برای قطعه‌سازی لیست که با درنظرگرفتن اندیس آغاز می‌شود
Stop: جایگاه پایان برای قطعه‌سازی که همیشه تا n-1 جایگاه حساب شده را به شما بازمی‌گرداند
Step: گام و یا چینشی که می‌خواهید از طریق آن اطلاعت لیست را بازیابی نمایید.
 
نکته ویژه: یکی از پرکاربردترین عملکردهای list slice برای تغییر چینش در یک‌رشته استفاده میشود که با در نظر گرفتن دستور زیر این عملکرد را به شما نمایش می‌دهیم.

 

X= “hello”
Print(X[::-1]) # olleh
"""


